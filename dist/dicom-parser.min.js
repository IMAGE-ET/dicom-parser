/**
 * Modules in this bundle
 * @license
 *
 * dicom-parser:
 *   license: MIT (http://opensource.org/licenses/MIT)
 *   author: Chris Hafey <chafey@gmail.com> (https://github.com/chafey)
 *   homepage: https://github.com/OHIF/dicom-parser
 *   version: 2.0.2
 *
 * This header is generated by licensify (https://github.com/twada/licensify)
 */
!function e(r,t,o){function a(c,s){if(!t[c]){if(!r[c]){var i="function"==typeof require&&require;if(!s&&i)return i(c,!0);if(n)return n(c,!0);var u=new Error("Cannot find module '"+c+"'");throw u.code="MODULE_NOT_FOUND",u}var l=t[c]={exports:{}};r[c][0].call(l.exports,function(e){var t=r[c][1][e];return a(t?t:e)},l,l.exports,e,r,t,o)}return t[c].exports}for(var n="function"==typeof require&&require,c=0;c<o.length;c++)a(o[c]);return a}({1:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=e("./lib/utils/hooks"),a=e("./lib/dicom-parser/dicom-parser");o.hooks.version="2.0.2",(0,o.setHookCallback)(a.createLocal),o.hooks.fn=a.dicomParserPrototype,o.hooks.prototype=a.dicomParserPrototype,o.hooks.parseDA=a.parseDA,t.default=o.hooks},{"./lib/dicom-parser/dicom-parser":4,"./lib/utils/hooks":8}],2:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createLocal=void 0;var o=e("../dicom-parser/constructor");t.createLocal=function(){var e={},r=new o.DicomParser(e);return r}},{"../dicom-parser/constructor":3}],3:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.DicomParser=function(){}},{}],4:[function(e,r,t){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.parseDA=t.dicomParserPrototype=t.createLocal=void 0;var a=e("../create/local"),n=e("./prototype"),c=o(n),s=e("./parse-da");t.createLocal=a.createLocal,t.dicomParserPrototype=c.default,t.parseDA=s.parseDA},{"../create/local":2,"./parse-da":5,"./prototype":7}],5:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e,r){switch(e){case 2:return r%4===0&&r%100||r%400===0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}},a=function(e,r,t){return!isNaN(t)&&(r>0&&r<=12&&e>0&&e<=o(r,t))};t.parseDA=function(e,r){if(e&&8===e.length){var t=parseInt(e.substring(0,4),10),o=parseInt(e.substring(4,6),10),n=parseInt(e.substring(6,8),10);if(r&&a(n,o,t)!==!0)throw new Error('invalid DA "'+e+'"');return{year:t,month:o,day:n}}if(r)throw new Error('invalid DA "'+e+'"')}},{}],6:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.parseDicom=function(){throw new Error("not yet implemented")}},{}],7:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=e("./constructor"),a=e("./parse-dicom"),n=e("./parse-da"),c=o.DicomParser.prototype;c.parseDicom=a.parseDicom,c.parseDA=n.parseDA,t.default=c},{"./constructor":3,"./parse-da":5,"./parse-dicom":6}],8:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){};t.setHookCallback=function(e){o=e},t.hooks=function(){for(var e=arguments.length,r=Array(e),t=0;t<e;t++)r[t]=arguments[t];return Reflect.apply(o,null,r)}},{}]},{},[1]);
//# sourceMappingURL=dicom-parser.min.map