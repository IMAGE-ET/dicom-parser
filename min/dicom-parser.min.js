//! dicom-parser.js
//! version: 2.0.2
//! authors: Chris Hafey, dicomParser contributors
//! license: MIT
//! https://github.com/OHIF/dicom-parser
!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.dicomParser=b()}(this,function(){"use strict";function a(){return i.apply(null,arguments)}
// This is done to register the method called with dicomParser()
// without creating circular dependencies.
function b(a){i=a}
// DicomParser prototype object
function c(a){}function d(){var a={},b=new c(a);return b}function e(a,b){throw new Error("not yet implemented")}
// algorithm based on http://stackoverflow.com/questions/1433030/validate-number-of-days-in-a-given-month
function f(a,b){// m is 0 indexed: 0-11
switch(a){case 2:return b%4===0&&b%100||b%400===0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}}function g(a,b,c){
// make year is a number
// make year is a number
return isNaN(c)?!1:b>0&&12>=b&&a>0&&a<=f(b,c)}/**
   * Parses a DA formatted string into a Javascript object
   * @param {string} date a string in the DA VR format
   * @param {boolean} [validate] - true if an exception should be thrown if the date is invalid
   * @returns {*} Javascript object with properties year, month and day or undefined if not present or not 8 bytes long
   */
function h(a,b){if(a&&8===a.length){var c=parseInt(a.substring(0,4),10),d=parseInt(a.substring(4,6),10),e=parseInt(a.substring(6,8),10);if(b&&g(e,d,c)!==!0)throw new Error("invalid DA '"+a+"'");return{year:c,month:d,day:e}}if(b)throw new Error("invalid DA '"+a+"'")}var i,j=c.prototype;j.parseDicom=e,j.parseDA=h;var k=j;a.version="2.0.2",b(d),a.fn=k,a.prototype=k,a.parseDA=h;var l=a;return l});