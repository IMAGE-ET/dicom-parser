!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.dicomParser=b()}(this,function(){"use strict";function a(){return i.apply(null,arguments)}function b(a){i=a}function c(a){}function d(){var a={},b=new c(a);return b}function e(a,b){throw new Error("not yet implemented")}function f(a,b){switch(a){case 2:return b%4===0&&b%100||b%400===0?29:28;case 9:case 4:case 6:case 11:return 30;default:return 31}}function g(a,b,c){return isNaN(c)?!1:b>0&&12>=b&&a>0&&a<=f(b,c)}function h(a,b){if(a&&8===a.length){var c=parseInt(a.substring(0,4),10),d=parseInt(a.substring(4,6),10),e=parseInt(a.substring(6,8),10);if(b&&g(e,d,c)!==!0)throw new Error("invalid DA '"+a+"'");return{year:c,month:d,day:e}}if(b)throw new Error("invalid DA '"+a+"'")}var i,j=c.prototype;j.parseDicom=e,j.parseDA=h;var k=j;a.version="2.0.2",b(d),a.fn=k,a.prototype=k,a.parseDA=h;var l=a;return l});